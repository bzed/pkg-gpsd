<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
                   "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<!-- lifted from troff+man by doclifter -->
<refentry>
<refentryinfo><date>14 Aug 2004</date></refentryinfo>
<refmeta>
<refentrytitle>3</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo class='source'>Linux</refmiscinfo>
</refmeta>
<refnamediv id='name'>
<refname>libgpsd</refname>
<refpurpose>service library for communicationg with the GPS daemon</refpurpose>
</refnamediv>
<refsynopsisdiv id='synopsis'>
<funcsynopsis>
<funcsynopsisinfo>

#include &lt;gps.h&gt;

</funcsynopsisinfo>
<funcprototype>
<funcdef>int <function>gpsd_open</function></funcdef>
    <paramdef>struct gps_data *<parameter>gpsdata</parameter></paramdef>
    <paramdef>char *<parameter>server</parameter></paramdef>
    <paramdef>char * <parameter>port</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>int <function>gpsd_query</function></funcdef>
    <paramdef>int <parameter>fd</parameter></paramdef>
    <paramdef>struct gps_data *<parameter>gpsdata</parameter></paramdef>
    <paramdef>char *<parameter>requests</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>int <function>gpsd_poll</function></funcdef>
    <paramdef>int <parameter>fd</parameter></paramdef>
    <paramdef>struct gps_data * <parameter>gpsdata</parameter></paramdef>
    <paramdef>void *<parameter>raw_hook</parameter>(char *buf)</paramdef>
</funcprototype>
<funcprototype>
<funcdef>void <function>gpsd_close</function></funcdef>
    <paramdef>int <parameter>fd</parameter></paramdef>
</funcprototype>
</funcsynopsis>
</refsynopsisdiv>


<refsect1 id='description'><title>DESCRIPTION</title>
<para><emphasis remap='B'>libgpsd</emphasis> is a service library
which supports querying the GPS daemon,
<citerefentry><refentrytitle>gpsd</refentrytitle><manvolnum>1</manvolnum></citerefentry>,
for the state of a GPS attached to the host machine.  It is safe for
multiple applications to use this library simultaneously.</para>

<para>Calling <function>gps_open()</function> initializes a GPS-data
structure to hold the data collected by the GPS, and returns a socket
attached to
<citerefentry><refentrytitle>gpsd</refentrytitle><manvolnum>1</manvolnum></citerefentry>.</para>

<para><function>gps_close()</function> ends the session.</para>

<para><function>gps_query()</function> queries the daemon, accepts a
one-line response, and updates parts of the GPS-data structure that
correspond to data changed since the last call.  The second argument
must be a string containing letters from the command set documented at
<citerefentry><refentrytitle>gpsd</refentrytitle><manvolnum>1</manvolnum></citerefentry>.
This function returns a 1 if any data changed since the last query, a
0 if no data changed, or a -1 if there was a Unix-level read error.</para>

<para><function>gps_poll()</function> accepts a one-line response from
the daemon and interprets it as though it were a query response (the
return value is as for a query).  It is meant to be used after the
user has issued an 'R' or 'W' command with
<function>gps_query()</function>, telling the daemon to stream updates
to the client.  If the third argument is non-NULL, it is used as a
hook function to be called on each line of streamed data that does not
begin with the "GPSD" prefix that tags gpsd responses.</para>

<para>Several member groups within the GPS-data structure have
timestamp, time-to-live, update_count, and change-flag members
associated with them; these get updated on each query or poll as
well.</para>

</refsect1>

<refsect1 id='see_also'><title>SEE ALSO</title>
<para>
<citerefentry><refentrytitle>gpsd</refentrytitle><manvolnum>1</manvolnum></citerefentry>
<citerefentry><refentrytitle>libgps</refentrytitle><manvolnum>3</manvolnum></citerefentry>
</para>
</refsect1>

<refsect1 id='author'><title>AUTHOR</title>
<para>Eric S. Raymond &lt;esr@thyrsus.com&gt;.</para>
</refsect1>
</refentry>

