<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
                   "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<!-- lifted from troff+man by doclifter -->
<refentry>
<refentryinfo><date>14 Aug 2004</date></refentryinfo>
<refmeta>
<refentrytitle>3</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo class='source'>Linux</refmiscinfo>
</refmeta>
<refnamediv id='name'>
<refname>libgpsd</refname>
<refpurpose>service library for GPS applications</refpurpose>
</refnamediv>
<refsynopsisdiv id='synopsis'>
<funcsynopsis>
<funcsynopsisinfo>

#include &lt;gpsd.h&gt;

struct gpsd_t session;

</funcsynopsisinfo>
<funcprototype>
<funcdef>void <function>gps_init</function></funcdef>
    <paramdef>struct gpsd_t * <parameter>session</parameter></paramdef>
    <paramdef>char * <parameter>device</parameter></paramdef>
    <paramdef>int <parameter>timeout</parameter></paramdef>
    <paramdef>char <parameter>devtype</parameter></paramdef>
    <paramdef>char * <parameter>dgpsserver</parameter></paramdef>
    <paramdef>void ( * <parameter>raw_hook</parameter>) ( char *buf )</paramdef>
</funcprototype>
<funcprototype>
<funcdef>int <function>gps_activate</function></funcdef>
    <paramdef>struct gpsd_t * <parameter>session</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>void <function>gps_deactivate</function></funcdef>
    <paramdef>struct gpsd_t * <parameter>session</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>void <function>gps_poll</function></funcdef>
    <paramdef>struct gpsd_t * <parameter>session</parameter></paramdef>
</funcprototype>
<funcprototype>
<funcdef>void <function>gps_wrap</function></funcdef>
    <paramdef>struct gpsd_t * <parameter>session</parameter></paramdef>
</funcprototype>

<funcprototype>
<funcdef>void <function>gpscli_report</function></funcdef>
    <paramdef>int <parameter>d</parameter></paramdef>
    <paramdef>const char * <parameter>fmt</parameter></paramdef>
    <paramdef><parameter>...</parameter></paramdef>
</funcprototype>

</funcsynopsis>
</refsynopsisdiv>


<refsect1 id='description'><title>DESCRIPTION</title>
<para><emphasis remap='B'>libgpsd</emphasis>
is a service library which supports querying GPS devices. The GPS daemon
<citerefentry><refentrytitle>gpsd</refentrytitle><manvolnum>1</manvolnum></citerefentry>
uses it, and is appropriate for situations is which more than one
program may need access to the GPS data stream.  This library may be
useful for applications that have the exclusive use of a GPS.</para>

<para>Calling
<function>gps_init()</function>
initializes a session structure to hold the data collected by the GPS.
You must specify the device path to which the GPS is attached.  You
must also specify a timeout in seconds after which data will be
considered stale.  You must specify one of the following device types:</para>
<itemizedlist>
  <listitem><para>Generic NMEA 0183 GPS</para></listitem>
  <listitem><para>TripMate GPS</para></listitem>
  <listitem><para>EarthMate GPS</para></listitem>
  <listitem><para>Log file to be played back.</para></listitem>
</itemizedlist>

<para>It is generally safe to specify 'n', as most modern GPSes speak
NMEA.</para>

<para>You may optionally specify a DGPS server, either as a string
containing a server name or a string containining server name followed
by a colon and a port name or number.  To specify no DGPS, pass the 
null pointer.</para>

<para>You may optionally specify a hook function to be executed on each NMEA
sentence as it is read from the GPS.  The data from non-NMEA GPSes like
the EarthMate will be translated to an NMEA sentence before being
passed to the hook.</para>

<para><function>gps_activate()</function>
initializes the connection to the GPS.  
<function>gps_deactivate()</function>
closes the connection. These functions are provided so that
long-running programs can release a connection when there is no
activity requiring the GPS, and re-acquire it later.</para>

<para><function>gps_poll()</function>
queries the GPS and updates the part of the session structure that
holds position, speed, GPS signal quality, and other data returned
by the GPS.
<function>gps_wrap()</function>
ends the session, implicitly performing a 
<function>gps_deactivate()</function>.</para>

<para>The calling application must define one additional function:
<function>gpscli_report()</function>.
The library will use this to ordinary status messages.  Use 
first argument of 0 for errors, 1 for ordinary status messages,
and 2 or higher for debugging messages.</para>

<para>The
.B debug
member of the session structure controls which messages are displayed.
It defaults to 1, but can be altered by the calling program.</para>
</refsect1>

<refsect1 id='see_also'><title>SEE ALSO</title>
<para>
<citerefentry><refentrytitle>gpsd</refentrytitle><manvolnum>1</manvolnum></citerefentry>
</para>
</refsect1>

<refsect1 id='author'><title>AUTHOR</title>
<para>Eric S. Raymond &lt;esr@thyrsus.com&gt; based partly on earlier work by
Remco Treffkorn, Derrick Brashear, and Russ Nelson.</para>
</refsect1>
</refentry>

