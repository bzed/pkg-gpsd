#!/usr/bin/env python
'''
xgps2 -- test client for gpsd

usage: xgps2 [-DhlV?] [server[:port[:device]]]

'''

gui_about = '''\
This is xgps2, a test client for the gpsd daemon.

By Eric S. Raymond for the GPSD project, December 2009
'''

import sys, os, re, math, time, exceptions, getopt

import pygtk
pygtk.require('2.0')
import gtk

class Base:
    def __init__(self):
        self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
        self.window.set_title("xgps2")
        self.window.connect("delete_event", self.delete_event)
        self.window.set_size_request(800, 600)

        vbox = gtk.VBox(False, 0)
        self.window.add(vbox)
        vbox.show()

        self.window.connect("destroy", lambda w: gtk.main_quit())

        #self.tooltips = gtk.Tooltips()

        # Set up toolbar style
        toolbar = gtk.Toolbar()
        toolbar.set_orientation(gtk.ORIENTATION_HORIZONTAL)
        toolbar.set_style(gtk.TOOLBAR_BOTH)
        toolbar.set_border_width(1)
        vbox.pack_start(toolbar, expand = False)
        toolbar.show()

        quit = gtk.ToolButton(gtk.STOCK_QUIT)
        toolbar.insert(quit, -1)
        #self.tooltips.set_tip(quit, "Leave this program.")
        quit.connect("clicked", self.delete_event)
        quit.show()

        properties = gtk.ToolButton(gtk.STOCK_PROPERTIES)
        toolbar.insert(properties, -1)
        #self.tooltips.set_tip(properties, "Preferences.")
        #properties.connect("clicked", self.properties_handler)
        properties.show()

        hbox = gtk.HBox(False, 0)
        vbox.add(hbox)
        hbox.show()

        self.skyview = gtk.DrawingArea()
        self.skyview.set_size_request(400, 400)
        hbox.add(self.skyview)

        self.window.show()

    def delete_event(self, widget, event, data=None):
        gtk.main_quit()
        return False

    def main(self):
        gtk.main()

if __name__ == "__main__":
    (options, arguments) = getopt.getopt(sys.argv[1:], "D:hl:V?",
                                         ['speedunits=','altunits=','verbose'])
    debug = 0
    latlon = 'd'
    speedunits = 'mph'
    altunits = 'feet'
    for (opt, val) in options:
        if opt in '-D':
            debug = int(val)
        elif opt == '-l':
            latlon = val
        elif opt == '--speedunits':
            speedunits = val
        elif opt == '--altunits':
            altunits = val
        elif opt in ('-?', '-h', '--help'):
            print __doc__
            sys.exit(0)
        elif opt == 'V':
            sys.stderr.write("xgps 0.1\n")
	    sys.exit(0)

    base = Base()
    gtk.main()
