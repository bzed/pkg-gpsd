<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE refentry PUBLIC 
   "-//OASIS//DTD DocBook XML V4.1.2//EN"
   "docbook/docbookx.dtd">
<refentry id='gpsd.8'>
<refmeta>
<refentrytitle>gpsd</refentrytitle>
<manvolnum>8</manvolnum>
<refmiscinfo class='date'>9 Aug 2004</refmiscinfo>
</refmeta>
<refnamediv id='name'>
<refname>gpsd</refname>
<refpurpose>interface daemon for GPS receivers</refpurpose>
</refnamediv>
<refsynopsisdiv id='synopsis'>

<cmdsynopsis>
  <command>gpsd</command>  
      <arg choice='opt'>-f <replaceable>GPS-devicename</replaceable></arg>
      <arg choice='opt'>-S <replaceable>listener-port</replaceable></arg>
      <arg choice='opt'>-d <replaceable>DGPS-server</replaceable></arg>
      <arg choice='opt'>-n </arg>      
      <arg choice='opt'>-N </arg>      
      <arg choice='opt'>-h </arg>
      <arg choice='opt'>-P <replaceable>pidfile</replaceable></arg>
      <arg choice='opt'>-D <replaceable>debuglevel</replaceable></arg>
      <arg choice='opt'>-v </arg>
</cmdsynopsis>
</refsynopsisdiv>

<refsect1 id='description'><title>DESCRIPTION</title>

<para><application>gpsd</application> is a monitor daemon that watches
a TCP/IP port (2947 by default), waiting for applications to request
location information from a GPS.  The GPS is expected to be
direct-connected to the machine running
<application>gpsd</application> via a USB or RS232C serial port.  The
port may be specified to gpsd at startup, or it may be set via a
command shipped down the client socket (e.g. by a USB hotplug
script). Given a GPS device, <application>gpsd</application> discovers 
the correct port speed and protocol for it.</para>

<para><application>gpsd</application> should be able to query any GPS
that speaks either the standard textual NMEA 0183 protocol, or the
binary Rockwell protocol used by EarthMate and some other GPSes, or
the binary SiRF protocol used by SiRf-II and SiRF-Star chipsets, or
the Garmin binary protocol used by the USB version of the Garmin 18
and other Garmin USB GPSes. <application>gpsd</application>
effectively hides the differences among these.</para>

<para>Optionally, <application>gpsd</application> may get
differential-GPS corrections from a ground station running a RTCM-S104
server; this will improve user error (UERE) from roughly 8 meters
to roughly 2 meters, provided you are within 1000 kilometers or so of
the ground station.  (Actual error will be UERE times a dilution
factor dependent on current satellite position.)</para>

<para>The program accepts the following options:</para>
<variablelist remap='TP'>
<varlistentry>
<term>-f</term>
<listitem>
<para>Set GPS device name (default is <filename>/dev/gps</filename>).</para>
</listitem>
</varlistentry>
<varlistentry>
<term>-S</term>
<listitem><para>Set TCP/IP port (default is 2947).</para></listitem>
</varlistentry>
<varlistentry>
<term>-d</term>
<listitem>
<para>Query a differential-GPS (DGPS) server.  If a suffix of the
server name begins with ":" it is interpreted as a port number,
overriding the default IANA-assigned port of 2101.
For DGPS servers available for use with this option, see
<ulink url='http://www.wsrcc.com/wolfgang/gps/dgps-ip.html'>
DGPS corrections over the Internet</ulink>.</para>
</listitem>
</varlistentry>
<varlistentry>
<term>-n</term>
<listitem><para>Don't wait for a client to connect before polling
the GPS.  The wait is a feature; many serial GPSes go to a standby
mode (not drawing power) before the host machine asserts DTR, so
waiting for the first actual request can save valuable battery power
on portable equipment.  This option combines well with -D2 to enable
monitoring of the GPS data stream.</para>
</listitem>
</varlistentry>
<varlistentry>
<term>-N</term>
<listitem><para>Don't daemonize; run in foreground. Mainly useful
for debugging.</para>
</listitem>
</varlistentry>
<varlistentry>
<term>-h</term>
<listitem><para>Display help message and terminate.</para></listitem>
</varlistentry>
<varlistentry>
<term>-P</term>
<listitem>
<para>Specify the name and path to record the daemon's process ID.</para>
</listitem>
</varlistentry>
<varlistentry>
<term>-D</term>
<listitem>
<para>Set debug level. At debug levels 2 and above,
<application>gpsd</application> reports incoming sentence and actions
to standard error.</para>
</listitem>
</varlistentry>
<varlistentry>
<term>-v</term>
<listitem>
<para>Dump version and exit.</para>
</listitem>
</varlistentry>
</variablelist>

<para>The request protocol for gpsd clients is very simple.  Each
request normally consists of a single ASCII character followed by a newline.
Case of the request character is ignored,  Each request returns a line
of response text ended by a CR/LF.  Requests and responses are as 
follows, with %f standing for a decimal float numeral and %d for
decimal integer numeral:</para>

<variablelist>
<varlistentry>
<term>a</term>
<listitem><para>The current altitude as "A=%f", meters above mean sea level.</para></listitem>
</varlistentry>

<varlistentry>
<term>b</term>

<listitem><para>The B command with no argument returns four fields
giving the parameters of the serial link to the GPS as "B=%d %d %c
%d"; baud rate, byte size, parity, (currently always N) and stop bits
(1 or 2).  The command "B=%d" sets the baud rate, not changing parity
or stop bits; watch the response, because it is possible for this to
fail if the GPS does not support a speed-switching command.  In case
of failure, the daemon and GPS will continue to communicate at the
old speed.</para></listitem>
</varlistentry>

<varlistentry>
<term>c</term>
<listitem><para>Returns, as "C=%d", the cycle time of updates
in seconds.</para></listitem>
</varlistentry>

<varlistentry>
<term>d</term>
<listitem><para>Returns the UTC time in the ISO 8601 format,
"D=yyyy-mm-ddThh:nmm:ss.ssZ". Digits of precision in the fractional-seconds
part will vary and may be zero.</para></listitem>
</varlistentry>

<varlistentry>
<term>e</term>
<listitem>
<para>Returns "E=%f %f %f": three estimated position errors in meters
&mdash; total, horizontal, and vertical (1-sigma or 66% confidence
level).  Note: many GPSes do not supply these numbers.  When the
GPS does not supply them, <application>gpsd</application> computes
them from satellite DOP using fixed figures for expected non-DGPS 
and DGPS range errors in meters.  A value of zero for any of these
numbers should be taken to mean that component of DOP is not available.
See also the 'q' command.</para>
</listitem>
</varlistentry>

<varlistentry>
<term>f</term> 
<listitem><para>Gets or sets the active GPS device name. The bare command 'f'
requests a response containing 'f=' followed by the name of the active
GPS device.  The command may be followed by an '=', in which case all
following printable characters up to the next
CR/LF are interpreted as the name of a trial GPS device.  If
there are no other clients active, the trial device is opened and read
to see if a GPS can be found there.  If it can, the trial device
becomes the active device and the trial device name is stored to be
opened at the time of the next client request, replacing the old one.
The response to this form of the command is to list the name of the
active device.</para></listitem>
</varlistentry>

<varlistentry>
<term>i</term>
<listitem><para>Returns a text string identifying the GPS.  The string
may contain spaces and is terminated by CR-LF.</para></listitem>
</varlistentry>

<varlistentry>
<term>l</term>
<listitem><para>Returns three fields: a protocol revision number,
the gpsd version, and a list of accepted request letters.</para></listitem>
</varlistentry>

<varlistentry>
<term>m</term>
<listitem><para>The NMEA mode as "M=%d". 0=no mode value yet seen, 
1=no fix, 2=2D (no altitude), 3=3D (with altitude).</para></listitem>
</varlistentry>

<varlistentry>
<term>n</term>
<listitem><para>Get or set the the GPS driver mode.  Without argument,
reports the mode as "N=%d"; N=0 means NMEA mode and N=1
means alternate mode (binary if it has one, for SiRF chipsets in
particular).  With argument, set the mode if possible; the new mode
will be reported in the response.
</para></listitem>
</varlistentry>

<varlistentry>
<term>o</term>
<listitem>
<para>Attempts to return a complete time/position/velocity report as a
unit.  Any field for which data is not available being reported as ?.
If there is no fix, the response is simply "O=?", otherwise a
timestamp is always reported.  Fields are as follows, in order:</para>

<variablelist>
<varlistentry>
<term>timestamp</term>
<listitem><para>Seconds since the Unix epoch, GMT. May have a
fractional part of up to .01sec precision.</para></listitem>
</varlistentry>

<varlistentry>
<term>time error</term>
<listitem><para>Estimated timestamp error in seconds (%f).</para></listitem>
</varlistentry>

<varlistentry>
<term>latitude</term>
<listitem><para>Latitude as in the P report (%f, degrees).</para></listitem>
</varlistentry>

<varlistentry>
<term>longitude</term>
<listitem><para>Longitude as in the P report (%f, degrees).</para></listitem>
</varlistentry>

<varlistentry>
<term>altitude</term>
<listitem><para>Altitude as in the A report (%f, meters).</para></listitem>
</varlistentry>

<varlistentry>
<term>horizontal error estimate</term>
<listitem><para>Horizontal error estimate as in the E report 
(%f, meters).</para></listitem>
</varlistentry>

<varlistentry>
<term>vertical error estimate</term>
<listitem><para>Vertical error estimate as in the E report 
(%f, meters).</para></listitem>
</varlistentry>

<varlistentry>
<term>course over ground</term>
<listitem><para>Track as in the T report (%f, degrees).</para></listitem>
</varlistentry>

<varlistentry>
<term>speed over ground</term>
<listitem><para>Speed as in the V report (%f, knots).</para></listitem>
</varlistentry>

<varlistentry>
<term>climb/sink</term>
<listitem><para>Vertical velocity as in the U report 
(%f, meters/sec).</para></listitem>
</varlistentry>

<varlistentry>
<term>estimated error in course over ground</term>
<listitem><para>Error estimate for course (%f, degrees).</para></listitem>
</varlistentry>

<varlistentry>
<term>estimated error in speed over ground</term>
<listitem><para>Error estimate for speed (%f, knots).</para></listitem>
</varlistentry>

<varlistentry>
<term>climb/sink</term>
<listitem><para>Error estimate for climb/sink 
(%f, meters/sec).</para></listitem>
</varlistentry>

</variablelist>

<para>Note: this command is experimental and still under development.
Currently the time error, track error, groundspeed error and 
climb/sink error fields are always ?.</para>
</listitem>
</varlistentry>

<varlistentry>
<term>p</term>
<listitem><para>Returns the current position in the form "P=%f %f";
numbers are in degrees, latitude first.</para></listitem>
</varlistentry>

<varlistentry>
<term>q</term>
<listitem>
<para>Returns "Q=%d %f %f %f": a count of satellites used in the last
fix, and three dimensionless dilution-of-precision (DOP) numbers
&mdash; total, horizontal, and vertical.  These are computed from the
satellite geometry; they are factors by which to multiply the
estimated UERE (user error in meters at specified confidence level due
to ionospheric delay, multipath reception, etc.) to get actual
circular error ranges in meters at the same confidence level. See also
the 'e' command.  Note: Some GPSes may fail to report these, or report
only one of them (often HDOP); a value of 0.0 should be taken
as an indication that the data is not available.</para>
</listitem>
</varlistentry>

<varlistentry>
<term>r</term>
<listitem><para>Sets or toggles 'raw' mode. Return "R=0" or "R=1". In
raw mode you read the NMEA data stream from the GPS. (Non-NMEA GPSes
get their communication format translated to NMEA on the fly.)  The
command 'r' immediately followed by the digit '1' or the plus sign '+'
sets raw mode.  The command 'r' followed by the digit '0' or the minus
sign '-' clears raw mode.  The command 'r' with neither suffix toggles
raw mode.</para></listitem>
</varlistentry>

<varlistentry>
<term>s</term>
<listitem><para>The NMEA status as "S=%d". 0=no fix, 1=fix,
2=DGPS-corrected fix.</para></listitem>
</varlistentry>

<varlistentry>
<term>t</term>
<listitem>
<para>Track made good; course "T=%f" in degrees from true north.</para>
</listitem>
</varlistentry>

<varlistentry>
<term>u</term>
<listitem><para>Current rate of climb as "U=%f" in meters per second.
Some GPSes (non-Sirf-II based) do not report this, in that case 
<application>gpsd</application> computes it using the altitude from
the last fix (if available).</para></listitem>
</varlistentry>

<varlistentry>
<term>v</term>
<listitem><para>The current speed over ground as "V=%f" in knots.</para></listitem>
</varlistentry>

<varlistentry>
<term>w</term>
<listitem><para>Sets or toggles 'watcher' mode (see the descroiption
below). Return "W=0" or "W=1".The command 'w' immediately followed by
the digit '1' or the plus sign '+' sets watcher mode.  The command 'w'
followed by the digit '0' or the minus sign '-' clears watcher mode.
The command 'w' with neither suffix toggles watcher
mode.</para></listitem>
</varlistentry>

<varlistentry>
<term>x</term>
<listitem><para>Returns "X=1" if the GPS is online, "X=0" if 
not.</para></listitem>
</varlistentry>

<varlistentry>
<term>y</term> 
<listitem>
<para>Returns Y= followed by a count not more than 12, followed by
that many quintuples of satellite PRNs, elevation/azimuth pairs
(elevation an integer formatted as %d in range 0-90, azimuth an
integer formatted as %d in range 0-359), signal strengths in
decibels, and 1 or 0 according as the satellite was or was
not used in the last fix. Each number is followed by one space.</para>
</listitem>
</varlistentry>

<varlistentry>
<term>z</term>
<listitem><para>The Z command returns daemon profiling information of
interest to <application>gpsd</application> developers. The format of
this string is subject to change without notice.</para></listitem>
</varlistentry>

</variablelist>

<para>Note that a response consisting of just ? following the =
means that there is no valid data available.</para>

<para>Requests can be concatenated and sent as a string;
<application>gpsd</application> will then respond with a
comma-separated list of replies.</para>

<para>Every <application>gpsd</application> reply will start with the
string "GPSD" followed by the replies. Examples:</para>

<screen>
      query:       "p\n"
      reply:       "GPSD,P=36.000000 123.000000\r\n"

      query:       "d\n"
      reply:       "GPSD,D=2002-11-16T02:45:05.12Z\r\n"

      query:       "va\n"
      reply:       "GPSD,V=0.000000,A=37.900000\r\n"
</screen>

<para>When clients are active but the GPS is not responding,
<application>gpsd</application> will spin trying to open the GPS
device once per second.  Thus, it can be left running in background
and survive having the GPS repeatedly unplugged and plugged back
in.</para>

<para>The recommended mode for clients is watcher mode.  In watcher
mode <application>gpsd</application> ships a line of data to the
client each time the the GPS sends a sentence, but rather than being
raw NMEA the line is a gpsd response as if the user had just sent some
set of gpsd commands.  That set of commands is the minimum for which
the incoming sentence is relevant &mdash; e.g., a GGA sentence ships a
"pdasm" response because it contains position, date, altitude, and GPS
mode data.  Additionally, watching clients get notifications in
the form X=0 or X=1 when the online/offline status of the GPS
changes.</para>

<para>Sending SIGHUP to a running <application>gpsd</application>
forces it to close the GPS and all client connections.  It will then
attempt to reconnect to the GPS and resume listening for client
connections.  This may be useful if your GPS enters a wedged or
confused state but can be soft-reset by pulling down DTR.</para>

</refsect1>
<refsect1 id='ntp'><title>USE WITH NTP</title> 

<para>When <application>gpsd</application> receives a sentence with a
timestamp, it packages the received timestamp with current local time
and sends it to a shared-memory segment with an ID known to
<application>ntpd</application>, the network time synchronization
daemon.  If <application>ntpd</application> has been properly
configured to receive this message, it will be used to correct the
system clock.  Note that because GPS clocks only return 0.01sec
resolution, <application>ntpd</application> is unlikely to use this
cue unless your system is off-net.  Furthermore, note that this
feature is experimental and currently operates with SiRF GPSes only;
making it work with other GPSes that report subsecond time resolution
may come later.</para>

<para>Here is a sample <filename>ntp.conf</filename> configuration
stanza telling <application>ntpd</application> how to read the GPS notfications:</para>

<programlisting>
server 127.127.28.0 minpoll 4 maxpoll 4
fudge 127.127.28.0 refid GPS
</programlisting>

<para>The magic pseudo-IP address 127.127.28.0 identifies unit 0 of
the <application>ntpd</application> shared-memory driver, which is
what <application>gpsd</application> writes to.  With this
configuration, <application>ntpd</application> will read the timestamp
posted by <application>gpsd</application> every 16 seconds;
<command>ntpq -p</command> should show the time difference when it is
not very large.</para>

</refsect1>
<refsect1 id='limitations'><title>LIMITATIONS</title> 

<para>There is a limitation in the accuracy of
<application>gpsd</application>-using applications that stems from the
fact that <application>gpsd</application> waits passively for updates
from the sensor rather than actively polling for them (which can't be
done in a device-independent way).  Most GPSes ship updates just once
per second.  At 50km/h (31mi/h) that's 13.8 meters change in position
between updates.  This is good enough if you're on foot or in a car
but not good enough for aviation applications.</para>

</refsect1>
<refsect1 id='standards'><title>APPLICABLE STANDARDS</title> 

<para>The official NMEA protocol standard is available on paper from
the <ulink url='http://www.nmea.org/pub/0183/'>National Marine
Electronics Association</ulink>, but is proprietary and expensive; the
maintainers of <application>gpsd</application> have made a point of
not looking at it.  The <ulink url="http://gpsd.berlios.de/">GPSD
website</ulink> links to several documents that collect publicly
disclosed information about the protocol.</para>

<para><application>gpsd</application> parses the following NMEA
sentences: GPRMC, GPGLL, GPVTG, GPGGA, GPGSA, GPGSV. and one vendor
extension PGRME.  Note that <application>gpsd</application> returns
pure decimal degrees, not the hybrid degree/minute format described in
the NMEA standard.</para>

</refsect1>
<refsect1 id='see_also'><title>SEE ALSO</title>
<para>
<citerefentry><refentrytitle>xgps</refentrytitle><manvolnum>1</manvolnum></citerefentry>,
<citerefentry><refentrytitle>libgps</refentrytitle><manvolnum>3</manvolnum></citerefentry>,
<citerefentry><refentrytitle>libgpsd</refentrytitle><manvolnum>3</manvolnum></citerefentry>,
<citerefentry><refentrytitle>gpsprobe</refentrytitle><manvolnum>1</manvolnum></citerefentry>,
<citerefentry><refentrytitle>gpsprof</refentrytitle><manvolnum>1</manvolnum></citerefentry>,
<citerefentry><refentrytitle>gpsfake</refentrytitle><manvolnum>1</manvolnum></citerefentry>.
</para>
</refsect1>

<refsect1 id='maintainer'><title>AUTHORS</title> 

<para>Remco Treffcorn, Derrick Brashear, Russ Nelson, Eric S. Raymond.
This manual page by Eric S. Raymond <email>esr@thyrsus.com</email>.
There is a project page <ulink
url="http://gpsd.berlios.de/">here</ulink>.</para>
</refsect1>

</refentry>

