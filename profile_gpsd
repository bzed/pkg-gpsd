#!/usr/bin/env python
#
# Collect latency-profiling data from a running gpsd.
# By default, turn it into a stacked-bar graph.
import sys, time, getopt, gps

if __name__ == '__main__':
    (options, arguments) = getopt.getopt(sys.argv[1:], "hn:r")
    await = 100;
    graph = True
    for (switch, val) in options:
	if (switch == '-n'):
	    await = int(val)
	elif (switch == '-r'):
	    graph = False
        elif (switch == '-h'):
            sys.stderr.write("usage: profile_gpsd [-h] [-r] [-n samplecount] \n")
    session = gps.gps(host="localhost", port="2947")
    session.query("wZ+")

    if graph:
        sys.stdout.write("set autoscale\n")
        sys.stdout.write('set key below\n')
        sys.stdout.write('set style fill\n')
        sys.stdout.write('set key title "%s"\n' % time.asctime())
        sys.stdout.write('plot "-" using 2 with boxes title "GPS latency"\n')
        sys.stdout.write("#\n")

    print "#   GPS time     	Received	Transmitted 	Read"
    print "#----------------	---------	----------- 	----------"
    while await:
        await -= 1
        session.poll()
        gps_time = gps.isotime(session.utc)
        recv_time = session.recv_time
        emit_time = session.emit_time
        print "%.6f	%2.6f	%2.6f	%2.6f" \
              % (gps_time,
                 (recv_time - gps_time) % 3600,
                 emit_time - recv_time, time.time() - recv_time)
    if graph:
        sys.stdout.write("end\n")


