From: Bernd Zeimetz <bernd@bzed.de>
Date: Wed, 10 Mar 2010 21:23:32 +0100
Subject: [PATCH] setup.py: Do nothing when SKIP_SETUP_PY is set in the environment.

---
 debian/patches/0001-skip-setup.py.patch            |   24 ++++++++
 ...ng-operation-of-the-Python-exerciser-does.patch |   58 ++++++++++++++++++++
 debian/patches/series                              |    3 +-
 debian/patches/skip-setup.py                       |   13 -----
 setup.py                                           |    4 ++
 5 files changed, 88 insertions(+), 14 deletions(-)
 create mode 100644 debian/patches/0001-skip-setup.py.patch
 create mode 100644 debian/patches/0002-Non-streaming-operation-of-the-Python-exerciser-does.patch
 delete mode 100644 debian/patches/skip-setup.py

diff --git a/debian/patches/0001-skip-setup.py.patch b/debian/patches/0001-skip-setup.py.patch
new file mode 100644
index 0000000..efe33cf
--- /dev/null
+++ b/debian/patches/0001-skip-setup.py.patch
@@ -0,0 +1,24 @@
+From: Bernd Zeimetz <bernd@bzed.de>
+Date: Wed, 10 Mar 2010 21:23:32 +0100
+Subject: [PATCH] setup.py: Do nothing when SKIP_SETUP_PY is set in the environment.
+
+---
+ setup.py |    4 ++++
+ 1 files changed, 4 insertions(+), 0 deletions(-)
+
+diff --git a/setup.py b/setup.py
+index 465f15c..06a4e6b 100644
+--- a/setup.py
++++ b/setup.py
+@@ -7,6 +7,10 @@ from distutils.core import setup, Extension
+ import os
+ import sys
+ 
++# workaround to skip building Python related stuff
++if os.environ.get('SKIP_SETUP_PY'):
++    sys.exit(0)
++
+ # For VPATH builds, this script must be run from $(srcdir) with the
+ # abs_builddir environment variable set to the location of the build
+ # directory.  This is necessary because Python's distutils package
+-- 
diff --git a/debian/patches/0002-Non-streaming-operation-of-the-Python-exerciser-does.patch b/debian/patches/0002-Non-streaming-operation-of-the-Python-exerciser-does.patch
new file mode 100644
index 0000000..c487e67
--- /dev/null
+++ b/debian/patches/0002-Non-streaming-operation-of-the-Python-exerciser-does.patch
@@ -0,0 +1,58 @@
+From: Eric S. Raymond <esr@thyrsus.com>
+Date: Wed, 10 Mar 2010 19:00:52 +0000
+Subject: [PATCH] Non-streaming operation of the Python exerciser doesn't make sense any
+ more, and the query() entry point is gone.  Fixes Debian bug #569703.
+
+git-svn-id: svn://svn.berlios.de/gpsd/trunk@7029 3da76a2a-08e2-0310-9c3e-bc9091dd3f7d
+---
+ gps/gps.py |   30 ++++++++----------------------
+ 1 files changed, 8 insertions(+), 22 deletions(-)
+
+diff --git a/gps/gps.py b/gps/gps.py
+index 5d43824..85a5cfe 100755
+--- a/gps/gps.py
++++ b/gps/gps.py
+@@ -659,34 +659,20 @@ def isotime(s):
+ 
+ if __name__ == '__main__':
+     import readline, getopt
+-    (options, arguments) = getopt.getopt(sys.argv[1:], "vw")
++    (options, arguments) = getopt.getopt(sys.argv[1:], "w")
+     streaming = False
+     verbose = False
+     for (switch, val) in options:
+-        if switch == '-w':
+-            streaming = True    
+-        elif switch == '-v':
++        if switch == '-v':
+             verbose = True    
+     if len(arguments) > 2:
+-        print 'Usage: gps.py [host [port]]'
++        print 'Usage: gps.py [-v] [host [port]]'
+         sys.exit(1)
+ 
+-    if streaming:
+-        session = gps(*arguments)
+-        session.set_raw_hook(lambda s: sys.stdout.write(s.strip() + "\n"))
+-        session.stream(WATCH_ENABLE|WATCH_NEWSTYLE)
+-        for report in session:
+-            print report
+-    else:
+-        print "This is the exerciser for the Python gps interface."
+-        session = gps(*arguments)
+-        session.set_raw_hook(lambda s: sys.stdout.write(s.strip() + "\n"))
+-        try:
+-            while True:
+-                session.query(raw_input("> "))
+-                print session
+-        except EOFError:
+-            print "Goodbye!"
+-        del session
++    session = gps(*arguments)
++    session.set_raw_hook(lambda s: sys.stdout.write(s.strip() + "\n"))
++    session.stream(WATCH_ENABLE|WATCH_NEWSTYLE)
++    for report in session:
++        print report
+ 
+ # gps.py ends here
+-- 
diff --git a/debian/patches/series b/debian/patches/series
index 865b176..ad176a2 100644
--- a/debian/patches/series
+++ b/debian/patches/series
@@ -1 +1,2 @@
-skip-setup.py
+0001-skip-setup.py.patch
+0002-Non-streaming-operation-of-the-Python-exerciser-does.patch
diff --git a/debian/patches/skip-setup.py b/debian/patches/skip-setup.py
deleted file mode 100644
index 6b74559..0000000
--- a/debian/patches/skip-setup.py
+++ /dev/null
@@ -1,13 +0,0 @@
---- a/setup.py
-+++ b/setup.py
-@@ -7,6 +7,10 @@ from distutils.core import setup, Extens
- import os
- import sys
- 
-+# workaround to skip building Python related stuff
-+if os.environ.get('SKIP_SETUP_PY'):
-+    sys.exit(0)
-+
- # For VPATH builds, this script must be run from $(srcdir) with the
- # abs_builddir environment variable set to the location of the build
- # directory.  This is necessary because Python's distutils package
diff --git a/setup.py b/setup.py
index 465f15c..06a4e6b 100644
--- a/setup.py
+++ b/setup.py
@@ -7,6 +7,10 @@ from distutils.core import setup, Extension
 import os
 import sys
 
+# workaround to skip building Python related stuff
+if os.environ.get('SKIP_SETUP_PY'):
+    sys.exit(0)
+
 # For VPATH builds, this script must be run from $(srcdir) with the
 # abs_builddir environment variable set to the location of the build
 # directory.  This is necessary because Python's distutils package
-- 
