From: Bernd Zeimetz <bernd@bzed.de>
Date: Sun, 29 Aug 2010 21:49:36 +0200
Subject: [PATCH] Fixing several Python identation errors.

---
 gps/fake.py |    4 ++--
 gpsprof     |    2 +-
 xgps        |    4 ++--
 3 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/gps/fake.py b/gps/fake.py
index 9d742f2..de4a66e 100644
--- a/gps/fake.py
+++ b/gps/fake.py
@@ -308,7 +308,7 @@ class DaemonInstance:
         self.spawncmd = None
 
 	# Look for gpsd in GPSD_HOME env variable
-	if os.environ.get('GPSD_HOME'):
+        if os.environ.get('GPSD_HOME'):
             for path in os.environ['GPSD_HOME'].split(':'):
                 _spawncmd = "%s/gpsd" % path
                 if os.path.isfile(_spawncmd) and os.access(_spawncmd, os.X_OK):
@@ -316,7 +316,7 @@ class DaemonInstance:
                     break
 
 	# if we could not find it yet try PATH env variable for it
-	if not self.spawncmd:
+        if not self.spawncmd:
             if not '/usr/sbin' in os.environ['PATH']:
                 os.environ['PATH']=os.environ['PATH'] + ":/usr/sbin"
             for path in os.environ['PATH'].split(':'):
diff --git a/gpsprof b/gpsprof
index e88936b..303e54c 100755
--- a/gpsprof
+++ b/gpsprof
@@ -457,7 +457,7 @@ def plotframe(await, fname, speed, threshold, title):
 
 if __name__ == '__main__':
     try:
-	(options, arguments) = getopt.getopt(sys.argv[1:], "f:hm:n:s:t:D:")
+        (options, arguments) = getopt.getopt(sys.argv[1:], "f:hm:n:s:t:D:")
 
         formatter = "space"
         raw = False
diff --git a/xgps b/xgps
index 79902c2..fe4ce7c 100755
--- a/xgps
+++ b/xgps
@@ -105,9 +105,9 @@ class SkyView(gtk.DrawingArea):
 
     def pol2cart(self, az, el):
         "Polar to Cartesian coordinates within the horizon circle."
-	az *= (math.pi/180)	# Degrees to radians
+        az *= (math.pi/180)	# Degrees to radians
         # Exact spherical projection would be like this:
-	# el = sin((90.0 - el) * DEG_2_RAD);
+        # el = sin((90.0 - el) * DEG_2_RAD);
         el = ((90.0 - el) / 90.0);
         xout = int((self.width / 2) + math.sin(az) * el * (self.diameter / 2))
         yout = int((self.height / 2) - math.cos(az) * el * (self.diameter / 2))
-- 
